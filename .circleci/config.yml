version: 2

jobs:
    build:
        environment:
            TZ: "/usr/share/zoneinfo/America/Detroit"
        working_directory: ~/go/src/github.com/ESG-USA/Auklet-Releaser-C
        docker:
            - image: circleci/golang:1.8.7-jessie
        steps:

            ##
            # SETUP
            ##
            - run:
                name: Flag local build
                command: |
                  if [[ "$CIRCLE_BUILD_NUM" == '' ]]; then
                    touch ~/.localCircleBuild
                  fi
            - add_ssh_keys
            - checkout
            - run:
                name: Prepare OS
                command: |
                  echo 'Installing NodeJS...'
                  curl -sL https://deb.nodesource.com/setup_8.x | sudo bash - > /dev/null
                  sudo apt-get -y install nodejs > /dev/null 2>&1
                  echo 'Installing dep...'
                  sudo curl -sSL https://github.com/golang/dep/releases/download/v0.3.2/dep-linux-amd64 -o /usr/local/go/bin/dep
                  sudo chmod +x /usr/local/go/bin/dep
                  echo 'Updating GOPATH...'
                  echo 'export GOPATH=$(cd ; pwd)/go' >> $BASH_ENV
                  echo 'export PATH=$GOPATH/bin:$PATH' >> $BASH_ENV
            - run:
                name: Validate PR
                command: |
                  if [[ ! -f ~/.localCircleBuild ]]; then
                    bash .devops/validate-pr.sh
                  fi
            - run:
                name: Install jq
                command: |
                  sudo curl -sSL -o /usr/local/bin/jq https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64
                  sudo chmod +x /usr/local/bin/jq
            - run:
                name: Calculate codebase version
                command: |
                  git config --global user.email "$ESGBOT_GIT_EMAIL" && git config --global user.name "$ESGBOT_GIT_NAME"
                  bash .devops/calculate-app-version.sh

            ##
            # RESTORE CACHES
            ##
            - restore_cache:
                key: v1-dependency-cache-{{ checksum "Gopkg.lock" }}-{{ checksum "Gopkg.toml" }}

            ##
            # TESTS
            ##
            - run:
                name: Download Go dependencies
                command: |
                  dep ensure -v
            - run:
                name: Run tests
                command: |
                  echo 'WARNING: this repo has no tests!'
            - run:
                name: Run Whitesource
                command: |
                  set -ou pipefail
                  if [[ ! -f ~/.localCircleBuild ]]; then
                    echo 'Initializing...'
                    export WHITESOURCE_PROJECT_NAME='Auklet-Releaser-C'
                    export WHITESOURCE_PROJECT_VERSION='1.0.0'
                    cd .devops
                    npm install --no-spin follow-redirects@1.5.0 > /dev/null 2>&1
                    node whitesource.js $(eval cd $CIRCLE_WORKING_DIRECTORY ; pwd)
                    rm -rf node_modules package-lock.json
                  else
                    echo 'This is a local build; skipping WhiteSource.'
                  fi

            ##
            # SAVE CACHES
            ##
            - save_cache:
                key: v1-dependency-cache-{{ checksum "Gopkg.lock" }}-{{ checksum "Gopkg.toml" }}
                paths:
                    - /home/circleci/go/pkg/dep/sources

            ##
            # DEPLOYMENT
            ##
            - run:
                name: Deploy Edge (If staging)
                command: |
                  set -ou pipefail
                  if [[ ! -f ~/.localCircleBuild ]]; then
                    if [ "${CIRCLE_BRANCH}" == "edge" ]; then
                      bash .devops/deploy.sh staging
                    fi
                  fi
            - run:
                name: Deploy QA (If master)
                command: |
                  set -ou pipefail
                  if [[ ! -f ~/.localCircleBuild ]]; then
                    if [ "${CIRCLE_BRANCH}" == "master" ]; then
                      bash .devops/deploy.sh qa
                      bash .devops/post-release.sh
                      # Need to checkout master again so we can run more scripts.
                      git checkout master
                      bash .devops/updateProdReleasePr.sh
                    fi
                  fi
            - run:
                name: Deploy Production (If production)
                command: |
                  set -ou pipefail
                  if [[ ! -f ~/.localCircleBuild ]]; then
                    if [ "${CIRCLE_BRANCH}" == "production" ]; then
                      bash .devops/deploy.sh production
                      bash .devops/post-release.sh
                    fi
                  fi
